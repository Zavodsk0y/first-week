// Необходимо написать функцию, которая возвращает Promise, который будет разрешен (fulfilled) через определенное время. Функция должна принимать два параметра:
// delay (время в миллисекундах, через которое Promise будет разрешен).
// message (сообщение, которое будет возвращено при разрешении Promise).
// Функция должна возвращать Promise, который будет разрешен с сообщением (message) через заданное количество времени (delay).
// Алгоритм:
// Функция должна принимать два параметра:
// delay — количество миллисекунд, через которые Promise будет разрешен.
// message — сообщение, которое будет возвращено при разрешении Promise.
// Функция возвращает Promise.
// Внутри Promise используется setTimeout с таймером на время, равное delay.
// После того, как setTimeout сработает (по истечении времени delay), Promise должен быть разрешен (resolve), и в качестве значения передается параметр message.
// Если функция получит правильные параметры, она должна вернуть обещание, которое будет разрешено через заданное время с переданным сообщением.

const resolvePromise = (delay: number, message: string) => {
    return new Promise(resolve => {
        setTimeout(() => resolve(message), delay)
    })
    .then((res) => {
        console.log(res)
    }) 
}

resolvePromise(3000, "Message")